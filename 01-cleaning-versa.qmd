---
title: "Maria's Cleaning"
---

## Goals of this notebook

The steps we'll take to prepare our data:

- Download the data
- Import it into our notebook
- Clean up data types and columns
- Export the data for next notebook

# Setup 

Loading the libraries 

```{r}
#| label: setup
#| message: false


library(tidyverse)
library(janitor)
```

## Downloading the Data 

In this section of the cleaning notebook, we're loading the VERSA program data. This data accounts for arrests made under Operation Lone Star starting in January 2023. 

Here is the summary of the differences between SPURS system and VERSA from the Depart of Public Safety Communications: 

"Please note that arrests are now documented on two spreadsheets due to the implementation of a new record management system in 2023 by the Texas Highway Patrol (THP). Prior to January 2023, THP utilized the Enterprise Management (EM) System for traffic enforcement activity (written warnings, citations, and CMV inspections) and SPURS for documenting entrusted property and criminal case reports. Beginning in January of 2023, THP underwent a statewide rollout of the Versaterm Software Suite, completed in August 2023, which serves as THPâ€™s only RMS system for regular traffic enforcement activity, entrusted property, as well as general and arrest offense report entry." 

More information about Operation Lone Star is found in the index page of this website. 

The data was obtained by a Public Records Request from KUT. 

## Importing the Data 

Here we're importing the VERSA data spreadsheet that I already have downloaded to my "data-raw" folder. Then, we're adding our data to a code chunk. For simplicity it will be called "versa_analysis," which we will then peak at in order to look at what our data looks like in order to clean. 


```{r}
versa_analysis<- read_csv("data-raw/versa_raw_data.csv") |> clean_names()

versa_analysis
```

```{r}
versa_analysis |> glimpse()
```


Notes for VERSA cleaning: 

- "Given three" refers to two middle names, only very few individuals in the list have this listed 
- Years are given as "apparent age" changed this to the actual age number to line up to SPURS "Person Age" 

## Fixing the dates 

We want to make sure that our dates are in month, date, year format for consistency in our analysis. 

```{r}
versa_analysis_date <- versa_analysis |>
 mutate(
   charge_date = mdy(arrest_date)
  )

versa_analysis_date |> glimpse()
```

```{r}
versa_analysis_date
```

Summary Stats: 

```{r}
versa_analysis_date |> summary()
```


## Fixing the age 

We want our VERSA data to match up to SPURS when it comes the the "Person Age" data column. In order to do that we subtract this year's date minus the "apparent_age" column of the VERSA data. This gives us the age in the same numerical format.

```{r}
versa_analysis_age <- versa_analysis_date |>
  mutate(
    person_age = 2024- apparent_age
    )

versa_analysis_age |> glimpse()
```

## Fixing Names 
We want to change the columns for the names of the offenders, so it matches up to the SPURS data set. Theb we want to change the officer column to "officer" and 

```{r}
versa_analysis_names <- versa_analysis_age |>
  mutate(
    person_first_name = given_one, 
    person_second_name = given_two, 
    person_third_name = given_three, 
    person_last_name = individual_surname,
    officer_id = arrest_officer1, 
    arrest_county = county_name, 
    code = class,
    severity_code = severity_code_group, 
    person_race_abbr = race, 
    person_gender_abbr = gender_code, 
    )

versa_analysis_names |> glimpse()
```

## Create new column to match SPURS race column 

Because the SPURS dataset uses the "race" column to identify both ethnicity and race, we created a new column that mirrors the SPURS way of documenting people's profiles. 

```{r}
versa_analysis_new <- versa_analysis_names |>
  mutate(
    person_race_abbr = if_else(ethnicity== "H", ethnicity, person_race_abbr), 
    arrest_state = case_match(jurisdiction, "TX" ~ "TEXAS")
  )

versa_analysis_new |> glimpse()

```


## Filter out unnnessary columns 

After cleaning the names of the columns, I want to remove the columns with the old column names.I will use the select function to select the columns I don't want. 

```{r}
versa_analysis_filter <- versa_analysis_new |>
 select(-c(apparent_age, given_one, given_two, given_three, individual_surname, arrest_officer1, jurisdiction, county_name, arrest_date, statute, class, severity_code_group, race, gender_code))

versa_analysis_filter |> glimpse()
  
```

## Removing extra labels in "severity_code" and creating clean column 

We noted that Versa and SPURS record charges differently under "severity_code." We aren't too sure if the Versa and VT label is equivalent to SPURS labels so we created a new column for cleaning purposes and we won't remove the original column. This new column will be "severity_code_clean." 

```{r}
versa_code_clean <- versa_analysis_filter |>
  mutate(
    severity_code_clean = case_match(severity_code, "Versa Misdemeanor Charges" ~ "Misdemeanor Charges", "VT Felony Charges" ~ "Felony Charges", "VT Federal/Other Charges" ~ "Federal/Other Charges"), 
    .after = severity_code
  )

versa_code_clean 

```


## Importing cleaned data 

```{r}
 versa_code_clean |>
  write_rds("data-processed/01-clean-versa.rds")
```



